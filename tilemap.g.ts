// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 2 . . . . . . . . 
. . . . 2 . . . . . 2 . . . . . 
. . . . . . . . . . . . . . 2 . 
2 2 2 . . . . . . . . . . . . . 
. . . . . . . . 2 . 2 2 2 2 2 2 
. . . . . 2 2 . . . . . . . . . 
. . . . 2 . . . . . . . . . . . 
. . . . . . . . . 2 2 2 2 . . . 
2 2 2 . . . . . . 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile4,myTiles.tile5,myTiles.tile7,myTiles.tile8,myTiles.tile3,myTiles.tile9], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 2 . . . . . . . . . . . 
. . . 2 2 . . . . . . . . . 2 2 
. . . . . . . . . . . . . . 2 . 
2 2 2 . . . . . . . . . . . 2 . 
. . . . 2 . 2 2 . . . . . . 2 . 
. . . . . . . . 2 2 2 2 2 2 2 . 
2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . 2 2 2 2 2 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile5,myTiles.tile2,myTiles.tile4,myTiles.tile9,myTiles.tile10,myTiles.tile11], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 
. . . . . . . . . . . . . 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 2 2 2 2 2 . . . 
. . 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 2 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 . 
. . . 2 2 2 . . . 2 2 2 2 2 2 . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`20000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000500000100000000000000000000000000000200000000000000000000000000050202020200000000000000000000000000000000000000000000010101000005000000000000000000000000000000000000020000000000000002020200000500000101010000000000000000000000000000000000010000000000000000050001020202020202010101000006000000000000020202020202000000020005000203030303030302020202020202000000000203030303030300000003010501030303030303030303030303030300070002030303030303030202020302010203030303030303030303030303030202020303030303030303030303030302030303030303030303030303030303`, img`
................................
................................
................................
................................
..2..............2222...........
................................
...2.......222..................
...................222222.......
.....222222...2...22222222222222
....2222222...2...22222222222222
...2222222222222.222222222222222
22222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile5,myTiles.tile2,myTiles.tile4,myTiles.tile9,myTiles.tile11,myTiles.tile12,myTiles.tile3], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
....................222222222222
...............22222222222222222
...........222222222222222222222
2222....222222222222222222222222
`, [myTiles.transparency16,myTiles.tile5,myTiles.tile2,myTiles.tile4,sprites.dungeon.hazardLava1,sprites.dungeon.hazardLava0,myTiles.tile13,sprites.castle.rock0,myTiles.tile3], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex`10001500080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000100000202020000000000000000000202020000000000000000040100000000000000000000000000000002020200000000000000000000010202000000010102020200000000020200000000000202000000010000000000000000000000000000000202020200000000000000000000000000000000000000000000000000000000000000000002020200090000000002020200000202030303020202000000030303000003030303030303030506060303030605030303030303030303030303030303030303030303`, img`
................
................
................
................
................
................
................
................
........222.....
....222.........
................
222...........22
.....222....22..
...22...........
........2222....
................
.............222
......222..22222
222...222..22222
222...222..22222
2222222222222222
`, [myTiles.transparency16,myTiles.tile5,myTiles.tile2,myTiles.tile4,myTiles.tile9,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,myTiles.tile14,sprites.castle.rock0,myTiles.tile3], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile7":
            case "tile9":return tile9;
            case "myTile8":
            case "tile10":return tile10;
            case "myTile9":
            case "tile11":return tile11;
            case "myTile10":
            case "tile12":return tile12;
            case "myTile11":
            case "tile13":return tile13;
            case "myTile12":
            case "tile14":return tile14;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
